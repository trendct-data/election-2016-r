{
    "collab_server" : "",
    "contents" : "library(jsonlite)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(tidyr)\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(ggalt)\nlibrary(stringr)\nlibrary(rgdal)\nrequire(maptools)\nlibrary(RCurl)\nlibrary(twitteR)\nlibrary(lubridate)\nlibrary(magick)\nelection_data_url <- \"https://s3.amazonaws.com/election-data-2016/data/Electiondata_1.json\"\n\nlookup_url <- \"https://s3.amazonaws.com/election-data-2016/data/Lookupdata_1.json\"\n\n\nelection_data <- fromJSON(election_data_url, simplifyVector=F)\n#town_results <- data.frame((election_data[[6]]))\ntown_results <- data.frame((election_data[[7]]))\ntown_results <- data.frame(t(town_results))\ntown_results$details <- rownames(town_results) \nrownames(town_results) <- NULL\ntown_results$type <- \"\"\n\ntown_results$type <- ifelse(grepl(\".TO\", town_results$details), \"percent_votes\", \"votes\")\ntown_results$candidate <- town_results$details\ntown_results$candidate <- gsub(\".TO\", \"\", town_results$candidate)\ntown_results$candidate <- gsub(\".V\", \"\", town_results$candidate)\ntown_results$town <- gsub(\"\\\\..*\", \"\", town_results$candidate)\ntown_results$town <- gsub(\"X\", \"\", town_results$town)\ntown_results$candidate <- gsub(\".*\\\\.\", \"\", town_results$candidate)\ntown_results$details <- NULL\ntown_results$number <- town_results$t.town_results.\ntown_results$t.town_results. <- NULL\n\nlookup_data <- fromJSON(lookup_url, simplifyVector=F)\ntown_id <- data.frame((lookup_data[[10]]))\ntown_id <- data.frame(t(town_id))\ntown_id$town <- rownames(town_id)\nrownames(town_id) <- NULL\ntown_id$town <- gsub(\"X\", \"\", town_id$town)\n\ntown_results <- left_join(town_results, town_id)\n\ncandidate_id <- data.frame((lookup_data[[3]]))\ncandidate_id <- data.frame(t(candidate_id))\ncandidate_id$details <- rownames(candidate_id)\ncandidate_id$cat <- \"\"\ncandidate_id$cat <- ifelse(grepl(\".CO\", candidate_id$details), \"county\", candidate_id$cat)\ncandidate_id$cat <- ifelse(grepl(\".NM\", candidate_id$details), \"name\", candidate_id$cat)\ncandidate_id$cat <- ifelse(grepl(\".LN\", candidate_id$details), \"last\", candidate_id$cat)\ncandidate_id$cat <- ifelse(grepl(\".MN\", candidate_id$details), \"middle\", candidate_id$cat)\ncandidate_id$cat <- ifelse(grepl(\".P\", candidate_id$details), \"party\", candidate_id$cat)\ncandidate_id$cat <- ifelse(grepl(\".FN\", candidate_id$details), \"first\", candidate_id$cat)\ncandidate_id$cat <- ifelse(grepl(\".AD\", candidate_id$details), \"address\", candidate_id$cat)\ncandidate_id$candidate <- gsub(\"\\\\..*\", \"\", candidate_id$details)\ncandidate_id$candidate <- gsub(\"X\", \"\", candidate_id$candidate)\ncandidate_id$details <- NULL\ncandidate_id$text <- candidate_id$t.candidate_id.\ncandidate_id$t.candidate_id. <- NULL\ncandidate_id <- spread(candidate_id, cat, text)\n\ntown_results <- left_join(town_results, candidate_id)\n\n\nparty_id <- data.frame((lookup_data[[7]]))\nparty_id <- data.frame(t(party_id))\nparty_id$details <- rownames(party_id)\nrownames(party_id) <- NULL\nparty_id$category <- \"\"\nparty_id$category <- ifelse(grepl(\".P\", party_id$details), \"party_p\", party_id$category)\nparty_id$category <- ifelse(grepl(\".NM\", party_id$details), \"party_name\", party_id$category)\nparty_id$category <- ifelse(grepl(\".CD\", party_id$details), \"party_abbr\", party_id$category)\nparty_id$party <- gsub(\"\\\\..*\", \"\", party_id$details)\nparty_id$party <- gsub(\"X\", \"\", party_id$party)\n\nparty_id$details <- NULL\nparty_id <- spread(party_id, category, t.party_id.)\n\ntown_results <- left_join(town_results, party_id)\n\n\n\npres_results <- filter(town_results, type==\"percent_votes\") %>%\n  filter(first==\"Donald\" | first==\"Hillary\" | first==\"Jill\" | name==\"Johnson and Weld\") %>%\n  select(number, t.town_id., name)\n\ncolnames(pres_results) <- c(\"percent\", \"id\", \"candidate\")\npres_results$percent <- gsub(\"%\", \"\", pres_results$percent)\npres_results$percent <- as.numeric(pres_results$percent )\npres_results <- pres_results  %>%\n  spread(candidate, percent)\n\npres_results$winner <- \"\"\npres_results$winner <- ifelse((pres_results$`Clinton and Kaine` ==  pres_results$`Trump and Pence`), \"Tie\", pres_results$winner)\npres_results$winner <- ifelse((pres_results$`Clinton and Kaine`==0 & pres_results$`Trump and Pence`==0), \"Results not ready\", pres_results$winner)\npres_results$winner <- ifelse((pres_results$`Clinton and Kaine` >  pres_results$`Trump and Pence`), \"Clinton\", pres_results$winner)\npres_results$winner <- ifelse((pres_results$`Clinton and Kaine` <  pres_results$`Trump and Pence`), \"Trump\", pres_results$winner)\npres_results$winner <- factor(pres_results$winner, levels = c(\"Clinton\", \"Trump\", \"Tie\", \"Results not ready\"))\n\n\n\ntown_shape <- readOGR(dsn=\"maps\", layer=\"ctgeo\")\ntown_shape_df <- fortify(town_shape, region=\"NAME10\")\nvoters_map <- left_join(town_shape_df, pres_results)\n\nvoters_map$color <- \"\"\nvoters_map$color <- ifelse(is.na(voters_map$winner) | voters_map$winner==\"Results not ready\", \"gray84\", voters_map$color)\nvoters_map$color <- ifelse(voters_map$winner==\"\", \"gray50\", voters_map$color)\n\nvoters_map$color <- ifelse(voters_map$winner==\"Trump\", \"tomato\", voters_map$color)\nvoters_map$color <- ifelse(voters_map$winner==\"Clinton\", \"lightskyblue\", voters_map$color)\n\n# theme_opts <- list(theme(panel.grid.minor = element_blank(),\n#                          panel.grid.major = element_blank(),\n#                          panel.background = element_blank(),\n#                          plot.background = element_rect(fill=\"#e6e8ed\"),\n#                          panel.border = element_blank(),\n#                          axis.line = element_blank(),\n#                          axis.text.x = element_blank(),\n#                          axis.text.y = element_blank(),\n#                          axis.ticks = element_blank(),\n#                          axis.title.x = element_blank(),\n#                          axis.title.y = element_blank(),\n#                          plot.title = element_text(size=22)))\n# voters_map$color <- NULL\n\ntime_is <- Sys.time()\nhour_is <-  hour(time_is)\nminute_is <- minute(time_is)\ntime_e <- ifelse(hour_is>12, \"p.m.\", \"a.m.\")\ntime_e <- ifelse(time_is==0 | time_is==24, \"a.m.\", time_e)\nhour_is <- ifelse(hour_is>12, hour_is-12, hour_is)\ntime_e <- ifelse(hour_is==0, \"a.m.\", time_e)\nhour_is <- ifelse(hour_is==0, 12, hour_is)\n\nthe_time <- paste0(hour_is, \":\", minute_is, \" \", time_e)\n\n# plot map\ngg <- ggplot(voters_map, aes(long,lat, group=group))\ngg <- gg + geom_polygon(aes(fill=winner))\ngg <- gg + geom_path(color=\"white\")\ngg <- gg + scale_fill_manual(values= c(\"Results not ready\"=\"gainsboro\", \"Clinton\" = \"lightskyblue\", \"Trump\"=\"tomato\", \"Tie\"=\"gray50\"))\ngg <- gg + labs(x=NULL, y=NULL, \n                title=\"Where candidates lead\",\n#                title=\"Presidential results by town\",\n#                subtitle=\"Where candidates are currently leading in votes. Results are unofficial.\",\n                subtitle=paste0(\"Unofficial votes as of \", the_time),\n                caption=\"Source: Office of Secretary of the State\")\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=24))\ngg <- gg + theme(plot.subtitle=element_text(family=\"Lato Regular\", size=17))\ngg <- gg + theme(plot.caption=element_text(family=\"Lato Regular\", size=12, color=\"gray\", margin=margin(t=10, r=80)))\ngg <- gg + theme(axis.line =  element_blank(),\n                 axis.text =  element_blank(),\n                 axis.ticks =  element_blank(),\n                 panel.grid.major = element_blank(),\n                 panel.grid.minor = element_blank(),\n                 panel.border = element_blank(),\n                 panel.background = element_blank(),\n                 legend.title=element_blank()) \ngg <- gg + coord_map(\"sinusoidal\") \n\ngg\n\nggsave(gg, file=\"output/pres_map.png\", width=8, height=4, type=\"cairo-png\")\n\ndate_time <- Sys.time()\ndate_time <- gsub(\" EDT\", \"\", date_time)\ndate_time <- gsub(\" \", \"\", date_time)\ndate_time <- gsub(\"-\", \"\", date_time)\ndate_time <- gsub(\":\", \"\", date_time)\n\nggsave(gg, file=paste0(\"output/archive/pres_map\", date_time, \".png\"), width=8, height=4, type=\"cairo-png\")\n\n# + theme_opts\n\n\n#setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)\n#tweet(\"Boston Common\", mediaPath = \"map.png\")\n\n# Let's randomize\n# \n# pres_results$`Clinton and Kaine` <- sample(1:100, 1, replace=TRUE)\n# pres_results$`Trump and Pence` <- sample(1:100, 1, replace=TRUE)\n# pres_results$`Johnson and Weld` <- sample(1:100, 1, replace=TRUE)\n# pres_results$`Stein and Baraka` <- sample(1:100, 1, replace=TRUE)\n\n\ntotal_results <- filter(town_results, type==\"votes\") %>%\n  filter(first==\"Donald\" | first==\"Hillary\" | first==\"Jill\" | name==\"Johnson and Weld\") %>%\n  select(number, t.town_id., name)\n\ncolnames(total_results) <- c(\"percent\", \"id\", \"candidate\")\ntotal_results$percent <- gsub(\"%\", \"\", total_results$percent)\ntotal_results$percent <- as.numeric(total_results$percent )\ntotal_results <- total_results  %>%\n  spread(candidate, percent)\n\ntotal_results$winner <- \"\"\ntotal_results$winner <- ifelse((total_results$`Clinton and Kaine` ==  total_results$`Trump and Pence`), \"Tie\", total_results$winner)\ntotal_results$winner <- ifelse((total_results$`Clinton and Kaine`==0 & total_results$`Trump and Pence`==0), \"Results not ready\", total_results$winner)\ntotal_results$winner <- ifelse((total_results$`Clinton and Kaine` >  total_results$`Trump and Pence`), \"Clinton\", total_results$winner)\ntotal_results$winner <- ifelse((total_results$`Clinton and Kaine` <  total_results$`Trump and Pence`), \"Trump\", total_results$winner)\ntotal_results$winner <- factor(total_results$winner, levels = c(\"Clinton\", \"Trump\", \"Tie\", \"Results not ready\"))\n\n\n\n\nchart_results <- total_results %>%\n  select(id, `Clinton and Kaine`, `Trump and Pence`, `Johnson and Weld`, `Stein and Baraka`) %>%\n  summarise(Clinton=sum(`Clinton and Kaine`, na.rm=T), Trump=sum(`Trump and Pence`), Johnson=sum(`Johnson and Weld`, na.rm=T), Stein=sum(`Stein and Baraka`)) %>%\n  gather(candidate, votes, 1:4)\n\nchart_results$candidate <- factor(chart_results$candidate, levels = chart_results$candidate[order(chart_results$votes)])\n\nymid <- mean(range(chart_results$votes))\n\n\n\ngg <- ggplot(chart_results, aes(x=candidate, y=votes, color=NULL, fill=candidate))\ngg <- gg + geom_bar(stat=\"identity\", position=\"dodge\")\ngg <- gg + geom_text(aes(x=candidate, y=votes, ymax=votes, family=\"Lato\", label=prettyNum(votes, big.mark=\",\"), \n                         hjust=ifelse(votes < ymid, -0.1, 1.1), size = 3), \n                      position = position_dodge(width=1))\ngg <- gg + coord_flip()\ngg <- gg + scale_fill_manual(values= c(\"Stein\"=\"lightgreen\", \"Johnson\"=\"#ffec80\", \"Clinton\" = \"lightskyblue\", \"Trump\"=\"tomato\"))\ngg <- gg + labs(x=NULL, y=NULL, \n                title=NULL)\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=24))\ngg <- gg + theme(plot.subtitle=element_text(family=\"Lato Regular\", size=17))\ngg <- gg + theme(plot.caption=element_text(family=\"Lato Regular\", size=12, color=\"gray\", margin=margin(t=10, r=80)))\ngg <- gg + theme(axis.text.y = element_text(family=\"Lato Regular\", size=12))\ngg <- gg + theme(legend.position=\"none\")\ngg <- gg + theme(axis.line =  element_blank(),\n                 axis.text.x =  element_blank(),\n                 axis.ticks =  element_blank(),\n                 panel.grid.major = element_blank(),\n                 panel.grid.minor = element_blank(),\n                 panel.border = element_blank(),\n                 panel.background = element_blank(),\n                 legend.title=element_blank()) \ngg\n\nggsave(gg, file=\"output/pres_chart.png\", width=4.7, height=4, type=\"cairo-png\")\nggsave(gg, file=paste0(\"output/archive/pres_chart\", date_time, \".png\"), width=4.7, height=4, type=\"cairo-png\")\n\n\nimage_background <- image_read(\"background.png\")\n\n\ntrend_logo <- image_read(\"trend_masthead.png\")\npres_map <- image_read(\"output/pres_map.png\") %>%\n  image_crop(\"1700x1200+360\")\npres_chart <- image_read(\"output/pres_chart.png\")\n\npres_map_edit <- image_read(\"background.png\") %>%\n  image_composite(pres_map) %>%\n  image_composite(image_scale(pres_chart, \"x1000\"), offset=\"+1225+180\") %>%\n  image_scale(\"x700\") %>%\n  image_write(path=\"output/pres_map.png\", format=\"png\")\n\npres_map_edit2 <- image_read(\"background.png\") %>%\n  image_composite(pres_map) %>%\n  image_composite(image_scale(pres_chart, \"x1000\"), offset=\"+1225+180\") %>%\n  image_scale(\"x700\") %>%\n  image_write(path=paste0(\"output/archive/pres_map\", date_time, \".png\"), format=\"png\")\n\n# FTP UPLOADING\n\n\nsource(\"keys.R\")\n\nftp_url <- paste0(\"ftp://\", ftp_login, \"@secure.ctmirror.org/projects.ctmirror.org/content/trend/2016/11/election/social_images/pres_map.png\")\nftp_url_archive <-  paste0(\"ftp://\", ftp_login, \"@secure.ctmirror.org/projects.ctmirror.org/content/trend/2016/11/election/social_images/archive/pres_map\", date_time, \".png\")\n\nftpUpload(\"output/pres_map.png\", ftp_url)\nftpUpload(paste0(\"output/archive/pres_map\", date_time, \".png\"), ftp_url_archive)\n\n",
    "created" : 1478273544638.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "646942687",
    "id" : "54C2F207",
    "lastKnownWriteTime" : 1478692267,
    "last_content_update" : 1478692267315,
    "path" : "~/Documents/Github/trendct-data/2016/11/election-2016-r/pres_map_generator.R",
    "project_path" : "pres_map_generator.R",
    "properties" : {
        "docOutlineSize" : "73.74974679625065",
        "docOutlineVisible" : "0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}