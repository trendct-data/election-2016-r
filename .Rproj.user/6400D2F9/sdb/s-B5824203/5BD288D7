{
    "collab_server" : "",
    "contents" : "# US Map generator\nlibrary(albersusa)\nlibrary(rgeos)\nlibrary(maptools)\nlibrary(ggplot2)\nlibrary(ggalt)\nlibrary(ggthemes)\nlibrary(dplyr)\nlibrary(magick)\n\n\ndate_time <- Sys.time()\ndate_time <- gsub(\" EDT\", \"\", date_time)\ndate_time <- gsub(\" \", \"\", date_time)\ndate_time <- gsub(\"-\", \"\", date_time)\ndate_time <- gsub(\":\", \"\", date_time)\n\nus_results <- read.csv(\"https://docs.google.com/spreadsheets/d/1toi7RJluTCvzRd_IeUc0uc93nrvs6VV9Sof9nR3zaeo/pub?output=csv\", stringsAsFactors=F)\nus_map <- fortify(usa_composite(), region=\"name\")\n\nus_map <- left_join(us_map, us_results)\n\nus_map$Winner <- ifelse(us_map$Winner==\"\", \"Results not ready\", us_map$Winner)\nus_map$Winner <- factor(us_map$Winner, levels = c(\"Clinton\", \"Trump\", \"Tie\", \"Results not ready\"))\n\n# \n# gg <- ggplot()\n# gg <- gg + geom_map(data=us_map, map=us_map,\n#                     aes(x=long, y=lat, map_id=id),\n#                     color=\"#2b2b2b\", size=0.15, fill=\"#e5e3df\")\n# gg <- gg + coord_map(\"polyconic\")\n# gg <- gg + theme_map()\n# gg\n# \n\n\ngg <- ggplot(us_map, aes(long,lat, group=group))\ngg <- gg + geom_polygon(aes(fill=Winner))\ngg <- gg + geom_path(color=\"white\", size=.25)\ngg <- gg + scale_fill_manual(values= c(\"Results not ready\"=\"gray84\", \"Clinton\" = \"lightskyblue\", \"Trump\"=\"tomato\", \"Tie\"=\"gray50\"))\n#gg <- gg + geom_path(color = \"white\") \ngg <- gg + labs(x=NULL, y=NULL, \n                title=\"Presidential results\",\n                subtitle=\"Where winners have been called.\",\n                caption=\"Source: The Associated Press\")\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=24))\ngg <- gg + theme(plot.subtitle=element_text(family=\"Lato Regular\", size=17))\ngg <- gg + theme(plot.caption=element_text(family=\"Lato Regular\", size=12, color=\"gray\", margin=margin(t=10, r=80)))\ngg <- gg + theme(axis.line =  element_blank(),\n                 axis.text =  element_blank(),\n                 axis.ticks =  element_blank(),\n                 panel.grid.major = element_blank(),\n                 panel.grid.minor = element_blank(),\n                 panel.border = element_blank(),\n                 panel.background = element_blank(),\n                 legend.title=element_blank()) \ngg <- gg + coord_map(\"polyconic\")\n\ngg\nggsave(gg, file=\"output/us_pres_map.png\", width=9, height=4, type=\"cairo-png\")\n\n\n\n# Image merge time\n# \n# trend_logo <- image_read(\"trend_masthead.png\")\n# \n# pres_map_edit <- image_read(\"output/us_pres_map.png\") %>%\n#   image_crop(\"2200x1200+250\") %>%\n#   image_composite(image_scale(trend_logo, \"x50\"), offset=\"+130+1130\") %>%\n#   image_scale(\"x700\") %>%\n#   image_write(path=\"output/us_pres_map.png\", format=\"png\")\n\nelectoral <- us_results %>%\n  group_by(Winner) %>%\n  summarise(Electoral_Votes=sum(Electoral.Votes, na.rm=T))\n\nleftover <- subset(electoral, Winner==\"\")\nleftover_count <- leftover$Electoral_Votes\n\nelectoral <- electoral %>%\n  filter(Winner==\"Clinton\" | Winner==\"Trump\")\n\nelectoral$Electoral_Votes[2] <- 264\n\ngg <- ggplot(electoral, aes(x = Winner, y = Electoral_Votes, fill = Winner)) \ngg <- gg + geom_bar(stat = \"identity\")\ngg <- gg + geom_hline(yintercept=270)\ngg <- gg + annotate(\"text\", x = 1.5, y = 280, family=\"Lato Regular\", size=6, label = \"270 Electoral Votes to win\")\ngg <- gg + geom_text(aes(x=Winner, y=Electoral_Votes, ymax=Electoral_Votes, family=\"Lato\", label=Electoral_Votes, \n                         vjust=ifelse(Electoral_Votes<255, -.5, 1.7), size = 3), \n                     position = position_dodge(width=1))\ngg <- gg + scale_fill_manual(values= c(\"Stein\"=\"lightgreen\", \"Johnson\"=\"#ffec80\", \"Clinton\" = \"lightskyblue\", \"Trump\"=\"tomato\"))\ngg <- gg + labs(x=NULL, y=NULL, \n                title=NULL)\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=24))\ngg <- gg + theme(plot.subtitle=element_text(family=\"Lato Regular\", size=17))\ngg <- gg + theme(plot.caption=element_text(family=\"Lato Regular\", size=12, color=\"gray\", margin=margin(t=10, r=80)))\ngg <- gg + theme(axis.text.x = element_text(family=\"Lato Regular\", size=15))\ngg <- gg + theme(legend.position=\"none\")\ngg <- gg + theme(axis.line =  element_blank(),\n                 axis.text.y =  element_blank(),\n                 axis.ticks =  element_blank(),\n                 panel.grid.major = element_blank(),\n                 panel.grid.minor = element_blank(),\n                 panel.border = element_blank(),\n                 panel.background = element_blank(),\n                 legend.title=element_blank()) \ngg\n\nggsave(gg, file=\"output/us_pres_chart.png\", width=4, height=4, type=\"cairo-png\")\nggsave(gg, file=paste0(\"output/archive/us_pres_chart\", date_time, \".png\"), width=4, height=4, type=\"cairo-png\")\n\n\nimage_background <- image_read(\"background.png\")\n\n\ntrend_logo <- image_read(\"trend_masthead.png\")\npres_map <- image_read(\"output/us_pres_map.png\") %>%\n  image_crop(\"1700x1200+380\")\n\npres_chart <- image_read(\"output/us_pres_chart.png\")\n\npres_map_edit <- image_read(\"background.png\") %>%\n  image_composite(pres_map) %>%\n  image_composite(image_scale(pres_chart, \"x1000\"), offset=\"+1325+100\") %>%\n  image_scale(\"x700\") %>%\n  image_write(path=\"output/us_pres_map.png\", format=\"png\")\n\npres_map_edit <- image_read(\"background.png\") %>%\n  image_composite(pres_map) %>%\n  image_composite(image_scale(pres_chart, \"x1000\"), offset=\"+1325+100\") %>%\n  image_scale(\"x700\") %>%\n  image_write(path=paste0(\"output/archive/us_pres_map\", date_time, \".png\"), format=\"png\")\n\nsource(\"keys.R\")\n\nftp_url <- paste0(\"ftp://\", ftp_login, \"@secure.ctmirror.org/projects.ctmirror.org/content/trend/2016/11/election/social_images/pres_map.png\")\nftp_url_archive <-  paste0(\"ftp://\", ftp_login, \"@secure.ctmirror.org/projects.ctmirror.org/content/trend/2016/11/election/social_images/archive/us_pres_map\", date_time, \".png\")\n\n#ftpUpload(\"output/us_pres_map.png\", ftp_url)\nftpUpload(paste0(\"output/archive/us_pres_map\", date_time, \".png\"), ftp_url_archive)\n\n\nif (electoral$Electoral_Votes[1]>=270) {\n  cat(\"Hillary Clinton has reached\", electoral$Electoral_Votes[1], \"electoral votes and has won the election.\n      Donald Trump has so far reached\", electoral$Electoral_Votes[2], \"but still can't win even if he gets the remaining\", leftover_count, \".\")\n} else if (electoral$Electoral_Votes[2]>=270) {\n  cat(\"Donald Trump has reached\", electoral$Electoral_Votes[2], \"electoral votes and has won the election.\n      Hillary Clinton has so far reached \", electoral$Electoral_Votes[1], \"but still can't win even if he gets the remaining\", leftover_count, \".\")\n} else {\n  cat(\"Donald Trump has reached\", electoral$Electoral_Votes[2], \"electoral votes and Hillary Clinton has so far reached\", electoral$Electoral_Votes[1], \"electoral votes. \n      There are\", leftover_count, \"electoral votes still up for grabs.\")\n}\n\n#setup_twitter_oauth(api_key, api_secret, access_token, access_token_secret)\n#tweet(\"Trump currently leads in electoral votes but the night is still young bit.ly/2f4jbWP\", mediaPath = \"output/us_pres_map.png\")\n",
    "created" : 1478460509248.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1611594675",
    "id" : "5BD288D7",
    "lastKnownWriteTime" : 1478675664,
    "last_content_update" : 1478675664393,
    "path" : "~/Documents/Github/trendct-data/2016/11/election-2016-r/usa_map.R",
    "project_path" : "usa_map.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}